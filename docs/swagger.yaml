definitions:
  model.MUser:
    properties:
      accountExpired:
        example: false
        type: boolean
      accountLocked:
        example: false
        type: boolean
      credentialsExpired:
        example: false
        type: boolean
      enabled:
        example: true
        type: boolean
      id:
        example: 1
        type: integer
      password:
        example: passlogin
        type: string
      userName:
        example: userlogin
        type: string
    type: object
  service.CredentialsLogin:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  util.TokenDetails:
    properties:
      accessToken:
        type: string
      atExpires:
        type: integer
      refreshToken:
        type: string
      rtExpires:
        type: integer
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: login user
      parameters:
      - description: Input username & password
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/service.CredentialsLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.TokenDetails'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Auth user
  /logout:
    get:
      consumes:
      - application/json
      description: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: Logout
      tags:
      - Logout
  /user/:
    get:
      consumes:
      - application/json
      description: get users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.MUser'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.MUser'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: show list master user
      tags:
      - User
    post:
      consumes:
      - application/json
      description: add by json master user
      parameters:
      - description: User ID
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.MUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MUser'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: create master user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: update by json master user
      parameters:
      - description: User ID
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.MUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MUser'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: update master user
      tags:
      - User
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: delete user by ID
      parameters:
      - description: User ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MUser'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.MUser'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: delete a master user by id
      tags:
      - User
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MUser'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.MUser'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: show master user by id
      tags:
      - User
securityDefinitions:
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
